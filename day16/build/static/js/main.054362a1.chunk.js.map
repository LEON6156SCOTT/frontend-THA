{"version":3,"sources":["images/me.jpg","components/styles/StyledMeme.js","components/Meme.js","components/styles/StyledCard.js","components/Card.js","components/styles/StyledRow.js","components/styles/StyledCell.js","components/Cell.js","components/Row.js","components/styles/StyledChessBoard.js","components/ChessBoard.js","App.js","reportWebVitals.js","index.js"],"names":["StyledMeme","styled","div","Meme","className","src","meme","StyledCard","showCard","callback","onClick","StyledRow","StyledCell","Cell","prop","Row","StyledChessBoard","ChessBoard","App","Card","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAe,G,MAAA,IAA0B,gC,cCE5BA,EAAaC,IAAOC,IAAV,0J,OCWRC,EAVF,WAET,OACI,cAACH,EAAD,CAAYI,UAAW,OAAvB,SACI,qBAAKC,IAAKC,OCLTC,EAAaN,IAAOC,IAAV,uQCWRM,EAVE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACf,OACI,eAACF,EAAD,WACI,6HACA,sFACA,wBAAQG,QAASD,EAAjB,gDCNCE,G,MAAYV,IAAOC,IAAV,oGCATU,EAAaX,IAAOC,IAAV,kDCYRW,EAXF,SAACC,GACV,OACI,cAACF,EAAD,CAAYR,UAAWU,EAAKV,aCiBrBW,EAnBH,SAACD,GAGT,OAEI,eAACH,EAAD,CAAWP,UAAWU,EAAKV,UAA3B,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAMA,UAAW,UACjB,cAAC,EAAD,IACA,cAAC,EAAD,CAAMA,UAAW,UACjB,cAAC,EAAD,IACA,cAAC,EAAD,CAAMA,UAAW,UACjB,cAAC,EAAD,IACA,cAAC,EAAD,CAAMA,UAAW,cCdhBY,EAAmBf,IAAOC,IAAV,+VCuBde,EAtBI,WAEf,OACI,eAACD,EAAD,WAEI,cAAC,EAAD,IACA,cAAC,EAAD,CAAKZ,UAAW,YAChB,cAAC,EAAD,IACA,cAAC,EAAD,CAAKA,UAAW,YAChB,cAAC,EAAD,IACA,cAAC,EAAD,CAAKA,UAAW,YAChB,cAAC,EAAD,IACA,cAAC,EAAD,CAAKA,UAAW,gBCMbc,MAff,WAKE,OACE,sBAAKd,UAAU,MAAf,UAEI,cAACe,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCJOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.054362a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/me.a4f838ec.jpg\";","import styled from \"styled-components\";\n\nexport const StyledMeme = styled.div`\n    \n  display: none;\n  position: absolute;\n  left: 50vw;\n  top: 50vh;\n  transform: translate(-50%,-50%);\n  \n    \n    `","import meme from \"../images/me.jpg\";\nimport {StyledMeme} from \"./styles/StyledMeme\";\n\nconst Meme = () => {\n\n    return (\n        <StyledMeme className={'meme'}>\n            <img src={meme}/>\n        </StyledMeme>\n    );\n\n}\n\nexport default Meme;","import styled from \"styled-components\";\n\nexport const StyledCard = styled.div`\n    \n  display: block;\n  position: absolute;\n  \n  transform: translate(-50%,-50%);\n  \n  left: 50vw;\n  top:50vh;\n  border: greenyellow 10px solid;\n  \n  background-color: black;\n  color: #ffffff;\n  padding: 8vh;\n  \n  \n    `","import {StyledCard} from \"./styles/StyledCard\";\nimport Meme from \"./Meme\";\n\nconst showCard = ({callback}) => {\n    return(\n        <StyledCard>\n            <h1>In Day 15, You had seen only my STRENGTHS, It is about time to meet this legend's weakness.</h1>\n            <h3>Forget about the ChessBoard, I have not created it!!</h3>\n            <button onClick={callback}>Click This, If you are Sure!!!</button>\n        </StyledCard>\n);\n};\n\nexport default showCard;","import styled from \"styled-components\";\n\nexport const StyledRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(8, auto);\n    \n    `","import styled from \"styled-components\";\n\nexport const StyledCell = styled.div`\n    \n    \n    \n    `\n","import {StyledCell} from \"./styles/StyledCell\";\n\n\nconst Cell = (prop) => {\n    return (\n        <StyledCell className={prop.className}>\n\n\n\n        </StyledCell>\n    )\n}\n\n\nexport default Cell;","import {StyledRow} from \"./styles/StyledRow\";\nimport Cell from \"./Cell\";\n\nconst Row = (prop) => {\n\n\n    return (\n\n        <StyledRow className={prop.className}>\n            <Cell/>\n            <Cell className={'black'}/>\n            <Cell/>\n            <Cell className={'black'}/>\n            <Cell/>\n            <Cell className={'black'}/>\n            <Cell/>\n            <Cell className={'black'}/>\n        </StyledRow>\n\n    )\n}\n\nexport default Row;","import styled from \"styled-components\";\n\nexport const StyledChessBoard = styled.div`\n  \n  display: none !important;\n  border: saddlebrown 2vh solid;\n  background-color: white;\n  height: 50vh;\n  width: 50vh;\n  position: absolute;\n  left: 50vw;\n  top: 50vh;\n  transform: translate(-50%,-50%);\n  display: grid;\n  grid-template-columns: repeat(auto, 10);\n  box-shadow: white 0px 5px 20px 5px;  \n    `","import Row from \"./Row\";\nimport {StyledChessBoard} from \"./styles/StyledChessBoard\";\n\nconst ChessBoard = () => {\n\n    return (\n        <StyledChessBoard>\n\n            <Row/>\n            <Row className={'reverse'}/>\n            <Row/>\n            <Row className={'reverse'}/>\n            <Row/>\n            <Row className={'reverse'}/>\n            <Row/>\n            <Row className={'reverse'}/>\n\n\n\n        </StyledChessBoard>\n    )\n\n}\n\n\nexport default ChessBoard;","import Meme from \"./components/Meme\";\nimport Card from \"./components/Card\";\n\nimport './App.css';\nimport ChessBoard from \"./components/ChessBoard\";\n\nfunction App() {\n\n\n\n\n  return (\n    <div className=\"App\">\n\n        <Card/>\n        <Meme/>\n        <ChessBoard/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}