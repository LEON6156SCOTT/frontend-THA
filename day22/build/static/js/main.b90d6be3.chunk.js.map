{"version":3,"sources":["components/Template.js","components/Meme.js","components/Home.js","App.js","index.js"],"names":["Template","props","className","templates","map","template","onClick","setMeme","style","url","id","Meme","useState","link","setLink","template_id","meme","username","password","boxes","form","setForm","src","alt","Array","box_count","_","i","type","placeholder","onChange","event","newBoxes","text","target","value","box","fetch","then","res","json","data","success","alert","generateMeme","filename","axios","get","responseType","fileDownload","download","Home","btnClicked","setBtnClicked","to","App","setTemplates","useEffect","memes","console","log","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b90d6be3.chunk.js","sourcesContent":["import './styles/Template.scss'\nconst Template = (props) =>{\n    return(\n        <div className={\"mainPage\"}>\n            <div className={\"mainPageTitle\"}>\n                <h1>Choose any Templates</h1>\n            </div>\n            <div className={\"templates\"}>\n                {\n                    props.templates.map(template => (\n                        <div key={template.id} className={\"template\"} onClick={() =>{\n                            props.setMeme(template);\n                        }\n                        }>\n                            <div style={{\"backgroundImage\": `url(${template.url})`}} className={\"image\"}>\n\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Template;","import './styles/Meme.scss'\nimport {useState} from \"react\";\nimport fileDownload from 'js-file-download';\nimport axios from \"axios\";\n\n\nconst Meme = (props) => {\n\n    const [link, setLink] = useState(null);\n\n    const [form, setForm] = useState({\n        template_id: props.meme.id,\n        username: \"TanmayVaish\",\n        password: \"1234!123\",\n        boxes: []\n    })\n\n    const generateMeme = () => {\n        let url = `https://api.imgflip.com/caption_image?template_id=${form.template_id}&username=${form.username}&password=${form.password}`\n        form.boxes.map((box, i) => {\n            url += `&boxes[${i}][text]=${box.text}`;\n        })\n        fetch(url).then(res => res.json()).then(data => {\n            if (data.success){\n                setLink(data.data.url);\n                props.setMeme({...props.meme, url: data.data.url});\n            }\n            else{\n                alert(\"Enter Captions First\");\n            }\n        })\n        return url;\n    }\n\n    function download(link, filename) {\n        axios.get(link, {\n            responseType: 'blob',\n        }).then(res => {\n            fileDownload(res.data, filename);\n        });\n    }\n\n\n    return (\n        <div className={\"memePage\"}>\n            <div className={\"container\"}>\n                <div className={\"memePageImg\"}>\n                    <img src={props.meme.url} alt={\"lol\"}/>\n                </div>\n                <div className={\"memePageInp\"}>\n                    {\n                        [...Array(props.meme.box_count)].map((_, i) => (\n                            <input key={i} type=\"text\" placeholder={`Caption ${i + 1}`}\n                                   onChange={(event) => {\n                                       const newBoxes = form.boxes;\n                                       newBoxes[i] = {text: event.target.value};\n                                       setForm({...form, boxes: newBoxes})\n                                   }}/>\n                        ))\n                    }\n\n                </div>\n                <div className={\"memePageBtns\"}>\n                    <div className={\"goBack\"} onClick={() => props.setMeme(null)}>Go Back</div>\n                    <div className={\"generateMeme\"} onClick={()=>{\n                        generateMeme();\n                    }}>Generate Meme</div>\n                    <div className={\"download\"} onClick={()=>{\n                        download(link,\"image.jpeg\");\n                    }}>Download</div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Meme;","import './styles/Home.scss'\nimport {Redirect} from \"react-router-dom\";\nimport {useState} from \"react\";\nconst Home = () =>{\n\n    const [btnClicked, setBtnClicked] = useState(false);\n\n    return(\n        <div className={\"homePage\"}>\n            <div className={\"homePageTitle\"}>\n                <h1>MemeMatic</h1>\n                <h6>A meme generator</h6>\n            </div>\n            <div className={'homePageBtn'}>\n                <div className={'playBtn'} onClick={()=>setBtnClicked(true)}>Play</div>\n                {\n                    btnClicked ? <Redirect to={\"/templates\"}/> : null\n                }\n            </div>\n        </div>\n    )\n}\nexport default Home;","import './App.scss';\nimport {useEffect, useState} from \"react\";\nimport Template from \"./components/Template\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport Meme from \"./components/Meme\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n\n    const [templates, setTemplates] = useState([]);\n    const [meme,setMeme] = useState(null);\n    useEffect(() => {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(res => res.json())\n            .then((data) => {\n                setTemplates(data.data.memes);\n                console.log(data.data.memes);\n            });\n    }, []);\n\n    return (\n            <div>\n                <HashRouter>\n                    <Switch>\n                        <Route exact path={\"/\"}>\n                            <Home/>\n                        </Route>\n                        <Route exact path={\"/templates\"}>\n                            {(meme==null)?<Template templates={templates} setMeme={setMeme}/>:<Meme meme={meme} setMeme={setMeme}/>}\n                        </Route>\n                    </Switch>\n                </HashRouter>\n            </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}